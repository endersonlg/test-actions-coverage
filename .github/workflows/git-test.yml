name: TESTE
on: [push]
                       
env: # Definir nossas env
  token: 123456789 # Como por exemplo

jobs: # Serviço que será feito
  deploy: # Nome do serviço
    runs-on: ubuntu-latest # Qual VM iremos executar

    steps: # Etapas
      - name: Checkout repository
        uses: actions/checkout@v2 # Quando utilizamos uma lib devemos colocar o uses

      - name: Install Dependencies
        run: yarn  

      - name: Test repository
        id: coverage
        run: |
               yarn test:coverage
               coverage_json=`cat ./coverage/coverage-summary.json`
               echo "::set-output name=lines_percentage::$(jq -r '.total.lines.pct' <<< "$coverage_json")"
               echo "::set-output name=branches_percentage::$(jq -r '.total.branches.pct' <<< "$coverage_json")"
               echo "::set-output name=functions_percentage::$(jq -r '.total.functions.pct' <<< "$coverage_json")"

      - name: test1
        if: ${{steps.coverage.outputs.lines_percentage >= secrets.COVERAGE_PERCENTAGE && steps.coverage.outputs.branches_percentage >= secrets.COVERAGE_PERCENTAGE && steps.coverage.outputs.functions_percentage >= secrets.COVERAGE_PERCENTAGE}}
        run: echo passou
        # run: |
        #        echo ${{steps.coverage.outputs.lines_percentage}}
        #        echo ${{steps.coverage.outputs.branches_percentage}}
        #        echo ${{steps.coverage.outputs.functions_percentage}}

      - name: test2
        if: ${{steps.coverage.outputs.lines_percentage >= secrets.COVERAGE_PERCENTAGE || steps.coverage.outputs.branches_percentage >= secrets.COVERAGE_PERCENTAGE || steps.coverage.outputs.functions_percentage >= secrets.COVERAGE_PERCENTAGE}}
        run: echo passou2
        # run: |
        #        echo ${{steps.coverage.outputs.lines_percentage}}
        #        echo ${{steps.coverage.outputs.branches_percentage}}
        #        echo ${{steps.coverage.outputs.functions_percentage}}
        

        